---
- name: Join computer to domain and place in appropriate OU
  hosts: windows

  vars:
    domain_name: "{{ lookup('ansible.builtin.env', 'DOMAIN_NAME', default=sapphire.dev) }}"
    domain_user: "{{ lookup('ansible.builtin.env', 'DOMAIN_ADMIN_USER', default=domain_admin_user) }}"
    domain_password: "{{ lookup('ansible.builtin.env', 'DOMAIN_ADMIN_PASSWORD', default=domain_admin_password) }}"
    
    # Break the domain into DC components
    domain_dc_parts: "{{ domain_name.split('.') | map('regex_replace', '^(.*)$', 'DC=\\1') | list }}"

    # Common suffix for all OUs
    dc_suffix: "{{ domain_dc_parts | join(',') }}"

    # Mapping of types to OU paths, using the domain dynamically
    ou_map:
      nonprod: "OU=NON-PRD,OU=EpicAZURE,OU=Servers,OU=BZN,{{ dc_suffix }}"
      prod: "OU=PRD,OU=EpicAZURE,OU=Servers,OU=BZN,{{ dc_suffix }}"
      altprod: "OU=PRD,OU=EpicAZURE,OU=Servers,OU=BZN,{{ dc_suffix }}"
      default: "OU=New Computers,{{ dc_suffix }}"

  tasks:

    - name: Extract environment from hostname
      ansible.builtin.set_fact:
        machine_type: "{{ ansible_hostname.split('-')[0] | lower }}"

    - name: Set target OU based on machine type
      ansible.builtin.set_fact:
        target_ou: "{{ ou_map.get(machine_type, ou_map.default) }}"

    - name: Debug OU for confirmation
      ansible.builtin.debug:
        msg: "Joining {{ ansible_hostname }} (type: {{ machine_type }}) to OU: {{ target_ou }}"

    # Disable AllSigned code execution?

    - name: Join the domain
      microsoft.ad.membership:
        dns_domain_name: "{{ domain_name }}"
        domain_admin_user: "{{ domain_user }}"
        domain_admin_password: "{{ domain_password }}"
        ou_path: "{{ target_ou }}"
        state: domain
        reboot: true

    # TODO: Diable AllSigned code execution?
